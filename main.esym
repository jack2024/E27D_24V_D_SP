D G "__PCD__" 0 1149 ""4.104""
D G "__DEVICE__" 0 1149 "4004"
D G "__DATE__" 0 1149 ""03-¾.¤.-23""
D G "__TIME__" 0 1149 ""14:59:01"" "Standard Header file for the PIC24FJ16GA004 device ////////////////"
d G "PIN_A0" 2 21 "5648"
d G "PIN_A1" 2 22 "5649"
d G "PIN_A2" 2 23 "5650"
d G "PIN_A3" 2 24 "5651"
d G "PIN_A4" 2 25 "5652"
d G "PIN_A7" 2 26 "5655"
d G "PIN_A8" 2 27 "5656"
d G "PIN_A9" 2 28 "5657"
d G "PIN_A10" 2 29 "5658"
d G "PIN_B0" 2 31 "5712"
d G "PIN_B1" 2 32 "5713"
d G "PIN_B2" 2 33 "5714"
d G "PIN_B3" 2 34 "5715"
d G "PIN_B4" 2 35 "5716"
d G "PIN_B5" 2 36 "5717"
d G "PIN_B6" 2 37 "5718"
d G "PIN_B7" 2 38 "5719"
d G "PIN_B8" 2 39 "5720"
d G "PIN_B9" 2 40 "5721"
d G "PIN_B10" 2 41 "5722"
d G "PIN_B11" 2 42 "5723"
d G "PIN_B12" 2 43 "5724"
d G "PIN_B13" 2 44 "5725"
d G "PIN_B14" 2 45 "5726"
d G "PIN_B15" 2 46 "5727"
d G "PIN_C0" 2 48 "5776"
d G "PIN_C1" 2 49 "5777"
d G "PIN_C2" 2 50 "5778"
d G "PIN_C3" 2 51 "5779"
d G "PIN_C4" 2 52 "5780"
d G "PIN_C5" 2 53 "5781"
d G "PIN_C6" 2 54 "5782"
d G "PIN_C7" 2 55 "5783"
d G "PIN_C8" 2 56 "5784"
d G "PIN_C9" 2 57 "5785"
d G "FALSE" 2 60 "0"
d G "TRUE" 2 61 "1"
d G "BYTE" 2 63 "unsigned int8"
d G "BOOLEAN" 2 64 "int1"
d G "getc" 2 66 "getch"
d G "fgetc" 2 67 "getch"
d G "getchar" 2 68 "getch"
d G "putc" 2 69 "putchar"
d G "fputc" 2 70 "putchar"
d G "fgets" 2 71 "gets"
d G "fputs" 2 72 "puts"
d G "UART_ADDRESS" 2 78 "2"
d G "UART_DATA" 2 79 "4"
d G "UART_AUTODETECT" 2 80 "8"
d G "UART_AUTODETECT_NOWAIT" 2 81 "9"
d G "UART_WAKEUP_ON_RDA" 2 82 "10"
d G "UART_SEND_BREAK" 2 83 "13"
d G "WDT_ON" 2 90 "1"
d G "WDT_OFF" 2 91 "0"
d G "RESTART_POWER_UP" 2 96 "0"
d G "RESTART_BROWNOUT" 2 97 "1"
d G "RESTART_WATCHDOG" 2 98 "4"
d G "RESTART_SOFTWARE" 2 99 "6"
d G "RESTART_MCLR" 2 100 "7"
d G "RESTART_ILLEGAL_OP" 2 101 "14"
d G "RESTART_TRAP_CONFLICT" 2 102 "15"
d G "SLEEP_FULL" 2 105 "0" "Default"
d G "SLEEP_IDLE" 2 106 "1" "Clock and peripherals don't stop"
d G "OSC_INTERNAL" 2 110 "32"
d G "OSC_CRYSTAL" 2 111 "1"
d G "OSC_CLOCK" 2 112 "2"
d G "OSC_RC" 2 113 "3"
d G "OSC_SECONDARY" 2 114 "16"
d G "TMR_DISABLED" 2 121 "0x0000"
d G "TMR_INTERNAL" 2 122 "0xA000"
d G "TMR_EXTERNAL" 2 123 "0xA002"
d G "TMR_GATE" 2 124 "0x0040"
d G "T1_EXTERNAL_SYNC" 2 125 "0xA006" "This only applies to Timer1"
d G "T1_EXTERNAL_RTC" 2 126 "0xC002" "This only applies to Timer1"
d G "TMR_DIV_BY_1" 2 128 "0x0000"
d G "TMR_DIV_BY_8" 2 129 "0x0010"
d G "TMR_DIV_BY_64" 2 130 "0x0020"
d G "TMR_DIV_BY_256" 2 131 "0x0030"
d G "TMR_32_BIT" 2 132 "0x0008" "Only for even numbered timers"
d G "CAPTURE_OFF" 2 138 "0x0000" "Capture OFF"
d G "CAPTURE_EE" 2 139 "0x0001" "Capture Every Edge"
d G "CAPTURE_FE" 2 140 "0x0002" "Capture Falling Edge"
d G "CAPTURE_RE" 2 141 "0x0003" "Capture Rising Edge"
d G "CAPTURE_DIV_4" 2 142 "0x0004" "Capture Every 4th Rising Edge"
d G "CAPTURE_DIV_16" 2 143 "0x0005" "Capture Every 16th Rising Edge"
d G "CAPTURE_INTERRUPT_ONLY" 2 144 "0x0007" "Interrupt on Rising Edge when in Sleep or Idle"
d G "INTERRUPT_EVERY_CAPTURE" 2 147 "0x0000" "Interrupt on every capture event"
d G "INTERRUPT_SECOND_CAPTURE" 2 148 "0x0020" "Interrupt on every second capture event"
d G "INTERRUPT_THIRD_CAPTURE" 2 149 "0x0040" "Interrupt on every third capture event"
d G "INTERRUPT_FOURTH_CAPTURE" 2 150 "0x0060" "Interrupt on every fourth capture event"
d G "CAPTURE_TIMER2" 2 153 "0x0080" "On capture event Timer 2 is captured"
d G "CAPTURE_TIMER3" 2 154 "0x0000" "On capture event Timer 3 is captured"
d G "CAPTURE_HALT_IDLE" 2 157 "0x2000" "Capture module halts during idle mode"
d G "CAPTURE_CONTINUE_IDLE" 2 158 "0x0000" "Capture module continues during idle mode"
d G "COMPARE_OFF" 2 164 "0x0000" "Compare OFF"
d G "COMPARE_SET_ON_MATCH" 2 165 "0x0001" "Pin from low to high on match"
d G "COMPARE_CLR_ON_MATCH" 2 166 "0x0002" "Pin from high to low on match"
d G "COMPARE_TOGGEL" 2 167 "0x0003" "Pin will toggle on every match occurrence"
d G "COMPARE_SINGLE_PULSE" 2 168 "0x0004" "Pin will generate single pulse on first match"
d G "COMPARE_CONT_PULSE" 2 169 "0x0005" "Pin will pulse for every match"
d G "COMPARE_PWM" 2 170 "0x0006" "Compare operates as PWM with fault pin disabled"
d G "COMPARE_PWM_FAULT" 2 171 "0x0007" "Compare operates as PWM with fault pin enabled"
d G "COMPARE_TIMER2" 2 174 "0x0000" "Timer 2 is the base timer"
d G "COMPARE_TIMER3" 2 175 "0x0008" "Timer 3 is the base timer"
d G "COMPARE_HALT_IDLE" 2 178 "0x2000" "Compare module halts during idle mode"
d G "COMPARE_CONTINUE_IDLE" 2 179 "0x0000" "Compare module continues during idle mode"
d G "SPI_MASTER" 2 184 "0x0020"
d G "SPI_SLAVE" 2 185 "0x1000"
d G "SPI_L_TO_H" 2 186 "0"
d G "SPI_H_TO_L" 2 187 "0x0100"
d G "SPI_CLK_DIV_1" 2 188 "0x001F"
d G "SPI_CLK_DIV_4" 2 189 "0x001E"
d G "SPI_CLK_DIV_16" 2 190 "0x001D"
d G "SPI_CLK_DIV_64" 2 191 "0x001C"
d G "SPI_MODE_16B" 2 192 "0x0400"
d G "SPI_SS_DISABLED" 2 193 "0x8000"
d G "ADC_OFF" 2 202 "0x10000"
d G "ADC_CLOCK" 2 203 "0x0000" "External"
d G "ADC_CLOCK_DIV_2" 2 204 "0x0001"
d G "ADC_CLOCK_DIV_4" 2 205 "0x0003"
d G "ADC_CLOCK_DIV_8" 2 206 "0x0007"
d G "ADC_CLOCK_DIV_16" 2 207 "0x000F"
d G "ADC_CLOCK_DIV_32" 2 208 "0x001F"
d G "ADC_CLOCK_DIV_64" 2 209 "0x007F"
d G "ADC_CLOCK_DIV_128" 2 210 "0x00FF"
d G "ADC_CLOCK_INTERNAL" 2 211 "0x8000" "Internal"
d G "ADC_TAD_MUL_0" 2 215 "0x0000"
d G "ADC_TAD_MUL_2" 2 216 "0x0200"
d G "ADC_TAD_MUL_4" 2 217 "0x0400"
d G "ADC_TAD_MUL_8" 2 218 "0x0800"
d G "ADC_TAD_MUL_16" 2 219 "0x1000"
d G "ADC_TAD_MUL_31" 2 220 "0x1F00"
d G "ADC_START_AND_READ" 2 223 "0x07"
d G "ADC_START_ONLY" 2 224 "0x01"
d G "ADC_READ_ONLY" 2 225 "0x06"
d G "NO_ANALOGS" 2 232 "0" "None"
d G "ALL_ANALOG" 2 233 "0xFFFFFFFF" "All"
d G "sAN0" 2 234 "0x00000001" "| A1"
d G "sAN1" 2 235 "0x00000002" "| A2"
d G "sAN2" 2 236 "0x00000004" "| B0"
d G "sAN3" 2 237 "0x00000008" "| B1"
d G "sAN4" 2 238 "0x00000010" "| B2"
d G "sAN5" 2 239 "0x00000020" "| 3"
d G "sAN6" 2 240 "0x00000040" "| C0"
d G "sAN7" 2 241 "0x00000080" "| C1"
d G "sAN8" 2 242 "0x00000100" "| 2"
d G "sAN9" 2 243 "0x00000200" "| B15"
d G "sAN10" 2 244 "0x00000400" "| B13"
d G "sAN11" 2 245 "0x00000800" "| B14"
d G "sAN12" 2 246 "0x00001000" "| 12"
d G "VSS_VDD" 2 249 "0x0000" "Range 0-Vdd"
d G "VREF_VREF" 2 250 "0x6000" "Range VrefL-VrefH"
d G "VREF_VDD" 2 251 "0x4000" "Range VrefL-Vdd"
d G "VSS_VREF" 2 252 "0x2000" "Range 0-VrefH"
d G "NC_NC_NC_NC" 2 257 "0x00"
d G "A4_A5_NC_NC" 2 258 "0x201"
d G "A4_VR_NC_NC" 2 259 "0x200"
d G "A5_VR_NC_NC" 2 260 "0x202"
d G "NC_NC_A2_A3" 2 261 "0x804"
d G "NC_NC_A2_VR" 2 262 "0x800"
d G "NC_NC_A3_VR" 2 263 "0x808"
d G "A4_A5_A2_A3" 2 264 "A4_A5_NC_NC | NC_NC_A2_A3"
d G "A4_VR_A2_VR" 2 265 "A4_VR_NC_NC | NC_NC_A2_VR"
d G "A5_VR_A3_VR" 2 266 "A5_VR_NC_NC |  NC_NC_A3_VR"
d G "C1_INVERT" 2 268 "0x10"
d G "C2_INVERT" 2 269 "0x20"
d G "C1_OUTPUT" 2 270 "0x40"
d G "C2_OUTPUT" 2 271 "0x80"
d G "VREF_DISABLED" 2 279 "0x0000"
d G "VREF_ANALOG" 2 280 "0x0010"
d G "VREF_HIGH" 2 281 "0x1000"
d G "VREF_LOW" 2 282 "0x1020"
d G "PAR_ENABLE" 2 291 "0x8000"
d G "PAR_DISABLE" 2 292 "0x0000" "Module enable/disable options"
d G "PAR_STOP_IN_IDLE" 2 293 "0x2000"
d G "PAR_CONTINUE_IN_IDLE" 2 294 "0x0000"
d G "PAR_ADDR_NOT_MULTIPLEXED" 2 295 "0x0000" "Address multiplexing options"
d G "PAR_LOW_ADDR_MULTIPLEXED" 2 296 "0x0800" "Address multiplexing options"
d G "PAR_FULL_ADDR_MULTIPLEXED" 2 297 "0x1000" "Address multiplexing options"
d G "PAR_PTBEEN_ENABLE" 2 298 "0x0400" "Byte Enable Port Enable bit"
d G "PAR_PTWREN_ENABLE" 2 299 "0x0200" "Write Enable Strobe bit"
d G "PAR_PTRDEN_ENABLE" 2 300 "0x0100" "Read/Write Strobe Port bit"
d G "PAR_ALP_ACTIVE_HIGH" 2 301 "0x0020" "Address latch polarity high"
d G "PAR_BEP_ACTIVE_HIGH" 2 302 "0x0004" "Byte Enable Polarity"
d G "PAR_WRSP_ACTIVE_HIGH" 2 303 "0x0002" "Write strobe Polarity bit"
d G "PAR_RDSP_ACTIVE_HIGH" 2 304 "0x0001" "Read strobe Polarity bit"
d G "PAR_CS_XX" 2 305 "0x0000" "Chip select pins used for address"
d G "PAR_CS_X1" 2 306 "0x0008" "Chip select pin 1 used, active high"
d G "PAR_CS_X0" 2 307 "0x0000" "Chip select pin 1 used, active low"
d G "PAR_CS_1X" 2 308 "0x0050" "Chip select pin 2 used, active high"
d G "PAR_CS_0X" 2 309 "0x0040" "Chip select pin 2 used, active low"
d G "PAR_CS_00" 2 310 "0x0080" "Chip select pins 1,2 used, active low"
d G "PAR_CS_11" 2 311 "0x0098" "Chip select pins 1,2 used, active high"
d G "PAR_CS_10" 2 312 "0x0090" "Chip select pins 1,2 used, 1 is active low, 2 is high"
d G "PAR_CS_01" 2 313 "0x0088" "Chip select pins 1,2 used, 1 is active high, 2 is low"
d G "PAR_INTR_ON_RW" 2 314 "0x20000000" "Interrupt on read write"
d G "PAR_NO_INTR_STALL_ACTIVATED" 2 315 "0x40000000" "No interrupt, processor stall activated"
d G "PAR_INTR_ON_3_RW_BUF" 2 316 "0x60000000" "Interrupt on write to Buffer 3 or read from Buffer 3"
d G "PAR_PSP_AUTO_INC" 2 317 "0x18000000" "Read write buffers auto increment"
d G "PAR_DEC_ADDR" 2 318 "0x10000000" "Increment the address"
d G "PAR_INC_ADDR" 2 319 "0x08000000" "Decrement the address"
d G "PAR_MASTER_MODE_1" 2 320 "0x03000000" "Master mode 1"
d G "PAR_MASTER_MODE_2" 2 321 "0x02000000" "Master mode 2"
d G "PAR_WAITB1" 2 322 "0x00000000" "1 Tcy Wait state for data setup R/W"
d G "PAR_WAITB2" 2 323 "0x00400000" "2 Tcy Wait state for data setup R/W"
d G "PAR_WAITB3" 2 324 "0x00800000" "3 Tcy Wait state for data setup R/W"
d G "PAR_WAITB4" 2 325 "0x00C00000" "4 Tcy Wait state for data setup R/W"
d G "PAR_WAITM0" 2 326 "0x00000000" "0 wait state for Read to byte"
d G "PAR_WAITM1" 2 327 "0x00040000" "1 Tcy wait state for Read to byte"
d G "PAR_WAITM2" 2 328 "0x00080000" "2 Tcy wait state for Read to byte"
d G "PAR_WAITM3" 2 329 "0x000C0000" "3 Tcy wait state for Read to byte"
d G "PAR_WAITM15" 2 330 "0x003C0000" "15 wait states"
d G "PAR_WAITE1" 2 331 "0x00000000" "1 Tcy Wait for data hold after strobe"
d G "PAR_WAITE2" 2 332 "0x00010000" "2 Tcy Wait for data hold after strobe"
d G "PAR_WAITE3" 2 333 "0x00020000" "3 Tcy Wait for data hold after strobe"
d G "PAR_WAITE4" 2 334 "0x00030000" "4 Tcy Wait for data hold after strobe"
t G "rtc_time_t" 2 354 "{sint8 tm_year,sint8 tm_yday,sint8 tm_mday,sint8 tm_mon,sint8 tm_hour,sint8 tm_wday,sint8 tm_sec,sint8 tm_min,sint8 tm_isdst}" "Constants used in setup_rtc() are:  // Second param is calibration"
d G "RTC_ENABLE" 2 357 "0x8000"
d G "RTC_DISABLE" 2 358 "0"
d G "RTC_OUTPUT_SECONDS" 2 359 "0x20400"
d G "RTC_OUTPUT_ALARM" 2 360 "0x00400"
d G "RTC_ALARM_ENABLE" 2 363 "0x8000"
d G "RTC_ALARM_DISABLE" 2 364 "0"
d G "RTC_CHIME_ENABLE" 2 365 "0x4000"
d G "RTC_CHIME_DISABLE" 2 366 "0"
d G "RTC_ALARM_HALFSECOND" 2 368 "0x0000"
d G "RTC_ALARM_SECOND" 2 369 "0x0400"
d G "RTC_ALARM_10_SECONDS" 2 370 "0x0800"
d G "RTC_ALARM_MINUTE" 2 371 "0x0C00"
d G "RTC_ALARM_10_MINUTES" 2 372 "0x1000"
d G "RTC_ALARM_HOUR" 2 373 "0x1400"
d G "RTC_ALARM_DAY" 2 374 "0x1800"
d G "RTC_ALARM_WEEK" 2 375 "0x1C00"
d G "RTC_ALARM_MONTH" 2 376 "0x2000"
d G "RTC_ALARM_YEAR" 2 377 "0x2400"
d G "MPWM_DISABLED" 2 384 "0"
d G "MPWM_FREE_RUN" 2 385 "0x8000"
d G "MPWM_SINGLE_PULSE" 2 386 "0x8001"
d G "MPWM_UP_DOWN" 2 387 "0x8002"
d G "MPWM_UP_DOWN_WITH_INTS" 2 388 "0x8003"
d G "MPWM_HALT_WHEN_IDLE" 2 390 "0x2000"
d G "MPWM_DUTY_UPDATES_IMMEADIATE" 2 391 "0x40000"
d G "MPWM_SYNC_OVERRIDES" 2 392 "0x20000"
d G "MPWM_DISABLE_UPDATES" 2 393 "0x10000"
d G "MPWM_LATCH_FAULTS" 2 394 "0x100000"
d G "MPWM_INDEPENDENT" 2 397 "0x0001"
d G "MPWM_ENABLE" 2 398 "0x0006" "both H and L"
d G "MPWM_ENABLE_H" 2 399 "0x0004"
d G "MPWM_ENABLE_L" 2 400 "0x0002"
d G "MPWM_FORCE_L_0" 2 402 "0x0020"
d G "MPWM_FORCE_L_1" 2 403 "0x0030"
d G "MPWM_FORCE_H_0" 2 404 "0x0040"
d G "MPWM_FORCE_H_1" 2 405 "0x0050"
d G "MPWM_FAULT_LA_HA" 2 407 "0x0700"
d G "MPWM_FAULT_LA_HI" 2 408 "0x0500"
d G "MPWM_FAULT_LI_HA" 2 409 "0x0600"
d G "MPWM_FAULT_LI_HI" 2 410 "0x0400"
d G "MPWM_FAULT_NO_CHANGE" 2 411 "0x0000"
d G "L_TO_H" 2 419 "0x40"
d G "H_TO_L" 2 420 "0"
d G "INTR_GLOBAL" 2 423 "0x400"
d G "INTR_NORMAL" 2 424 "0x100"
d G "INTR_ALTERNATE" 2 425 "0x200"
d G "INTR_NESTING" 2 426 "0x300"
d G "INTR_LEVEL0" 2 427 "0x500"
d G "INTR_LEVEL1" 2 428 "0x501"
d G "INTR_LEVEL2" 2 429 "0x502"
d G "INTR_LEVEL3" 2 430 "0x503"
d G "INTR_LEVEL4" 2 431 "0x504"
d G "INTR_LEVEL5" 2 432 "0x505"
d G "INTR_LEVEL6" 2 433 "0x506"
d G "INTR_LEVEL7" 2 434 "0x507"
d G "INTR_CN_PIN" 2 436 "0x8000" "or in a PIN_xx constant"
d G "INT_OSCFAIL" 2 438 "1"
d G "INT_ADDRERR" 2 439 "2"
d G "INT_STACKERR" 2 440 "3"
d G "INT_MATHERR" 2 441 "4"
d G "INT_DMAERR" 2 442 "5"
d G "INT_EXT0" 2 443 "6"
d G "INT_IC1" 2 444 "7"
d G "INT_OC1" 2 445 "8"
d G "INT_TIMER1" 2 446 "9"
d G "INT_IC2" 2 447 "70"
d G "INT_OC2" 2 448 "71"
d G "INT_TIMER2" 2 449 "72"
d G "INT_TIMER3" 2 450 "73"
d G "INT_SPI1" 2 451 "75"
d G "INT_RDA" 2 452 "76"
d G "INT_TBE" 2 453 "77"
d G "INT_ADC1" 2 454 "78"
d G "INT_SI2C" 2 455 "81"
d G "INT_MI2C" 2 456 "82"
d G "INT_CNI" 2 457 "84"
d G "INT_EXT1" 2 458 "85"
d G "INT_OC3" 2 459 "90"
d G "INT_OC4" 2 460 "91"
d G "INT_TIMER4" 2 461 "92"
d G "INT_TIMER5" 2 462 "93"
d G "INT_EXT2" 2 463 "94"
d G "INT_RDA2" 2 464 "95"
d G "INT_TBE2" 2 465 "96"
d G "INT_SPI2E" 2 466 "97"
d G "INT_SPI2" 2 467 "98"
d G "INT_IC3" 2 468 "102"
d G "INT_IC4" 2 469 "103"
d G "INT_IC5" 2 470 "104"
d G "INT_OC5" 2 471 "106"
d G "INT_SI2C2" 2 472 "114"
d G "INT_MI2C2" 2 473 "115"
d G "INT_UART1E" 2 474 "130"
d G "INT_UART2E" 2 475 "131"
d G "INT_SPIE" 2 476 "150"
d G "INT_COMP" 2 477 "152"
d G "INT_PMP" 2 478 "164"
d G "INT_RTC" 2 479 "173"
d G "INT_CRC" 2 480 "174"
d G "INT_LVD" 2 481 "179"
D G "_STDIO" 3 12 ""
D G "_STRING" 4 12 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 21 "unsigned int8"
D G "wchar_t" 5 22 "char"
D G "NULL" 5 23 "0"
D G "offsetof" 5 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 4 19 10 "FUNCTION"
F G "memmove" 4 34 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int8"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
D G "strcopy" 4 54 "strcpy"
C L "strncpy" 4 19 4 "FUNCTION"
F G "strncpy" 4 61 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 61 "*int8"
V L "s2" 4 61 "*int8"
V L "n" 4 61 "int8"
V L "s" 4 63 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
F G "strcat" 4 78 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 78 "*int8"
V L "s2" 4 78 "*int8"
V L "s" 4 80 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
F G "strncat" 4 96 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 96 "*int8"
V L "s2" 4 96 "*int8"
V L "n" 4 96 "int8"
V L "s" 4 98 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
F G "memcmp" 4 120 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 120 "*int8"
V L "s2" 4 120 "*int8"
V L "n" 4 120 "int8"
V L "su1" 4 122 "*int8"
V L "su2" 4 122 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
F G "strcmp" 4 134 "sint8(*int8 s1,*int8 s2)"
V L "s1" 4 134 "*int8"
V L "s2" 4 134 "*int8"
C L "strcoll" 4 19 2 "FUNCTION"
F G "strcoll" 4 144 "sint8(*int8 s1,*int8 s2)"
V L "s1" 4 144 "*int8"
V L "s2" 4 144 "*int8"
C L "strncmp" 4 19 4 "FUNCTION"
F G "strncmp" 4 157 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 157 "*int8"
V L "s2" 4 157 "*int8"
V L "n" 4 157 "int8"
C L "strxfrm" 4 19 3 "FUNCTION"
F G "strxfrm" 4 169 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 169 "*int8"
V L "s2" 4 169 "*int8"
V L "n" 4 169 "int8"
V L "s" 4 171 "*int8"
V L "n1" 4 172 "int8"
C L "memchr" 4 19 3 "FUNCTION"
F G "memchr" 4 191 "*int8(*int8 s,int8 c,int8 n)"
V L "s" 4 191 "*int8"
V L "c" 4 191 "int8"
V L "n" 4 191 "int8"
V L "uc" 4 193 "int8"
V L "su" 4 194 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
F G "strchr" 4 205 "*int8(*int8 s,int8 c)"
V L "s" 4 205 "*int8"
V L "c" 4 205 "int8"
C L "strcspn" 4 19 4 "FUNCTION"
F G "strcspn" 4 217 "int8(*int8 s1,*int8 s2)"
V L "s1" 4 217 "*int8"
V L "s2" 4 217 "*int8"
V L "sc1" 4 219 "*int8"
V L "sc2" 4 219 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
F G "strpbrk" 4 232 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 232 "*int8"
V L "s2" 4 232 "*int8"
V L "sc1" 4 234 "*int8"
V L "sc2" 4 234 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
F G "strrchr" 4 247 "*int8(*int8 s,int8 c)"
V L "s" 4 247 "*int8"
V L "c" 4 247 "int8"
V L "p" 4 249 "*int8"
C L "strspn" 4 19 2 "FUNCTION"
F G "strspn" 4 262 "int8(*int8 s1,*int8 s2)"
V L "s1" 4 262 "*int8"
V L "s2" 4 262 "*int8"
V L "sc1" 4 264 "*int8"
V L "sc2" 4 264 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
F G "strstr" 4 281 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 281 "*int8"
V L "s2" 4 281 "*int8"
V L "s" 4 283 "*int8"
V L "t" 4 283 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
F G "strtok" 4 320 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 320 "*int8"
V L "s2" 4 320 "*int8"
V L "beg" 4 322 "*int8"
V L "end" 4 322 "*int8"
V L "save" 4 323 "*int8"
C L "strlen" 4 19 6 "FUNCTION"
F G "strlen" 4 369 "int8(*int8 s)"
V L "s" 4 369 "*int8"
V L "sc" 4 371 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
F G "stricmp" 4 380 "sint8(*int8 s1,*int8 s2)"
V L "s1" 4 380 "*int8"
V L "s2" 4 380 "*int8"
C L "strlwr" 4 19 3 "FUNCTION"
F G "strlwr" 4 394 "*int8(*int8 s)"
V L "s" 4 394 "*int8"
V L "p" 4 396 "*int8"
D G "UnderSet_addr" 0 5 "0x00"
D G "OverSet_addr" 0 6 "0x01"
D G "UnderResSet_addr" 0 7 "0x02"
D G "OverResSet_addr" 0 8 "0x03"
D G "UnderTimSet_addr" 0 9 "0x04"
D G "OverTimSet_addr" 0 10 "0x05"
D G "UnderResTimSet_addr" 0 11 "0x06"
D G "OverResTimSet_addr" 0 12 "0x07"
V G "FlashLEDUnder" 0 14 "int1"
V G "FlashLEDOver" 0 15 "int1"
V G "flash_LED_Under" 0 17 "int8"
V G "flash_LED_Over" 0 17 "int8"
V G "toggle_pin_under" 0 19 "sint8"
V G "toggle_pin_over" 0 20 "sint8"
D G "LED_Healty" 0 23 "PIN_B5"
D G "LED_Under" 0 24 "PIN_B4"
D G "LED_Over" 0 25 "PIN_B0"
D G "Over_Rly" 0 27 "PIN_B7"
D G "Under_Rly" 0 28 "PIN_B6"
D G "HIGH" 0 30 "1"
D G "LOW" 0 31 "0"
D G "BT_DW" 0 34 "PIN_B13"
D G "BT_UP" 0 35 "PIN_B14"
D G "BT_SET" 0 36 "PIN_B15"
D G "EXP_OUT_DO" 0 43 "PIN_B12"
D G "EXP_OUT_CLOCK" 0 44 "PIN_B11"
D G "EXP_OUT_ENABLE" 0 45 "PIN_B10"
D G "EEPROM_SDA" 0 47 "PIN_B9"
D G "EEPROM_SCL" 0 48 "PIN_B8"
D G "NORMAL_VOLT" 0 56 "24"
D G "MAX_VOLT" 0 57 "35"
D G "MIN_VOLT" 0 58 "15"
D G "MAX_TIME" 0 59 "60"
D G "MIN_TIME" 0 60 "0"
V G "DC_V" 0 62 "int16"
V G "DC_V7seg" 0 63 "sint16"
V G "DC_Average" 0 64 "sint16[12]"
V G "set_mode" 0 65 "int1"
V G "menuCount" 0 66 "int32"
V G "flash_dot" 0 67 "int8"
V G "flash_LED" 0 67 "int8"
V G "DebugLoopCount" 0 69 "int8"
V G "HangCount" 0 71 "int8"
V G "oldloop" 0 71 "int8"
V G "Updateloop" 0 71 "int8"
V G "ReadI2CCount" 0 73 "int8"
V G "I2C_wait" 0 73 "int8"
V G "Ack1" 0 75 "int1"
V G "Ack2" 0 75 "int1"
V G "Ack3" 0 75 "int1"
V G "real_data" 0 78 "sint16"
V G "vout" 0 80 "float"
V G "vin" 0 81 "float"
V G "R1" 0 87 "float"
V G "R2" 0 88 "float"
V G "roi" 0 92 "int8"
V G "sib" 0 92 "int8"
V G "hnoi" 0 92 "int8" "Segment byte maps for numbers 0 to 9 *"
V G "SEGMENT_MAP" 0 95 "int8[1]"
V G "SEGMENT_SELECT" 0 97 "int8[1]"
E G "State_nor" 0 100 "0"
E G "State_PreUnder" 0 100 "1"
E G "State_Under" 0 100 "2"
E G "State_PreUnderRes" 0 100 "3"
E G "State_UnderRes" 0 100 "4"
E G "State_PreOver" 0 100 "5"
E G "State_Over" 0 100 "6"
E G "State_PreOverRes" 0 100 "7"
E G "State_OverRes" 0 100 "8" "UNDER OVER"
E G "nor" 0 103 "0"
E G "UnderSet" 0 103 "1"
E G "OverSet" 0 103 "2"
E G "UnderResSet" 0 103 "3"
E G "OverResSet" 0 103 "4"
E G "UnderTimSet" 0 103 "5"
E G "OverTimSet" 0 103 "6"
E G "UnderResTimSet" 0 103 "7"
E G "OverResTimSet" 0 103 "8" "UNDER Only"
E G "Nor_UnOly" 0 105 "0"
E G "UnderSet_UnOly" 0 105 "1"
E G "UnderResSet_UnOly" 0 105 "2"
E G "UnderTimSet_UnOly" 0 105 "3"
E G "UnderResTimSet_UnOly" 0 105 "4"
V G "mode" 0 107 "int8"
V G "State" 0 107 "int8"
V G "UnderResTimeCount" 0 108 "sint16"
V G "OverResTimeCount" 0 108 "sint16"
V G "UnderTimeCount" 0 108 "sint16"
V G "OverTimeCount" 0 108 "sint16"
V G "OverTimSetValue" 0 109 "sint16"
V G "UnderResTimSetValue" 0 109 "sint16"
V G "UnderTimSetValue" 0 109 "sint16"
V G "OverResTimSetValue" 0 109 "sint16"
V G "UnderValue" 0 110 "float"
V G "OverValue" 0 110 "float"
V G "UnderResValue" 0 110 "float"
V G "OverResValue" 0 110 "float"
V G "StartMeasureCount" 0 111 "sint16"
V G "TIMER_Flag" 0 113 "int8"
D G "MCP342X_CONTINUOUS" 0 115 "0x10"
D G "MCP342X_ONE_SHOT" 0 116 "0x00"
D G "MCP342X_18BITS" 0 118 "0x0C"
D G "MCP342X_16BITS" 0 119 "0x08"
D G "MCP342X_14BITS" 0 120 "0x04"
D G "MCP342X_12BITS" 0 121 "0x00"
D G "MCP342X_8X_GAIN" 0 123 "0x03"
D G "MCP342X_4X_GAIN" 0 124 "0x02"
D G "MCP342X_2X_GAIN" 0 125 "0x01"
D G "MCP342X_1X_GAIN" 0 126 "0x00"
D G "MCP342X_DEVICE_CODE" 0 128 "0xD0"
D G "MCP342X_START_CONVERSTION" 0 129 "0x80"
D G "MCP342X_GENERAL_CALL_ADDRESS" 0 131 "0x00"
D G "MCP342X_GENERAL_CALL_LATCH" 0 132 "0x04"
D G "MCP342X_MODE" 0 134 "MCP342X_CONTINUOUS"
D G "MCP342X_BITS" 0 139 "MCP342X_16BITS"
D G "MCP342X_GAIN" 0 144 "MCP342X_1X_GAIN"
D G "MCP342X_ADDRESS" 0 149 "0"
D G "MCP342X_CHANNEL" 0 154 "0"
D G "MCP342X_SCL" 0 164 "PIN_B8"
D G "MCP342X_SDA" 0 165 "PIN_B9"
F G "SoftI2CInit" 0 167 "void()"
C L "SoftI2CInit" 0 22 1 "FUNCTION"
F G "i2cNack" 0 174 "void()"
C L "i2cNack" 0 22 1 "FUNCTION"
C L "i2cNack" 0 22 1 "FUNCTION"
C L "i2cNack" 0 22 1 "FUNCTION"
F G "i2cAck" 0 184 "void()"
C L "i2cAck" 0 22 1 "FUNCTION"
C L "i2cAck" 0 22 1 "FUNCTION"
C L "i2cAck" 0 22 1 "FUNCTION"
F G "SoftI2CStart" 0 194 "void()"
C L "SoftI2CStart" 0 22 1 "FUNCTION"
C L "SoftI2CStart" 0 22 2 "FUNCTION"
C L "SoftI2CStart" 0 22 1 "FUNCTION"
F G "SoftI2CStop" 0 206 "void()"
C L "SoftI2CStop" 0 22 1 "FUNCTION"
C L "SoftI2CStop" 0 22 1 "FUNCTION"
C L "SoftI2CStop" 0 22 1 "FUNCTION"
F G "SoftI2CWriteByte" 0 215 "int8(int8 data)"
V L "data" 0 215 "int8"
V L "i" 0 217 "int8"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 2 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 3 "FUNCTION"
V L "ack" 0 246 "int8"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
C L "SoftI2CWriteByte" 0 22 1 "FUNCTION"
F G "i2cReadByte" 0 255 "int8()"
V L "inByte" 0 257 "int8"
V L "n" 0 257 "int8"
C L "i2cReadByte" 0 22 2 "FUNCTION"
C L "i2cReadByte" 0 22 1 "FUNCTION"
C L "i2cReadByte" 0 22 1 "FUNCTION"
C L "i2cReadByte" 0 22 1 "FUNCTION"
C L "i2cReadByte" 0 22 1 "FUNCTION"
C L "i2cReadByte" 0 22 1 "FUNCTION"
C L "Soft_adc_init" 0 22 1 "FUNCTION"
F G "Soft_adc_init" 0 282 "void()"
C L "Soft_adc_init" 0 22 1 "FUNCTION"
C L "Soft_adc_init" 0 22 1 "FUNCTION"
C L "Soft_read_adc_mcp" 0 22 1 "FUNCTION"
F G "Soft_read_adc_mcp" 0 293 "sint16()"
V L "result" 0 299 "{sint16 sint16,int8[2] b}"
V L "status" 0 300 "int8"
C L "Soft_read_adc_mcp" 0 22 1 "FUNCTION"
D G "EEPROM_ADDRESS" 0 320 "BYTE"
D G "EEPROM_SIZE" 0 321 "128"
F G "init_ext_eeprom" 0 323 "void()"
F G "ext_eeprom_ready" 0 328 "int8()"
V L "ack" 0 329 "int1"
C L "ext_eeprom_ready" 0 22 1 "FUNCTION"
C L "ext_eeprom_ready" 0 22 1 "FUNCTION"
F G "write_ext_eeprom" 0 336 "void(int8 address,int8 data)"
V L "address" 0 336 "int8"
V L "data" 0 336 "int8"
F G "read_ext_eeprom" 0 345 "int8(int8 address)"
V L "address" 0 345 "int8"
V L "data" 0 346 "int8"
F G "delay_nanosec" 0 359 "void(sint16 us)"
V L "us" 0 359 "sint16" "about 800 nanosec"
V L "counter" 0 360 "sint16"
F G "EEPROM_WriteFloat" 0 365 "void(float value,sint16 address)"
V L "value" 0 365 "float"
V L "address" 0 365 "sint16"
V L "p" 0 366 "*int8"
V L "i" 0 367 "sint16"
F G "EEPROM_ReadFloat" 0 375 "float(sint16 address)"
V L "address" 0 375 "sint16"
V L "value" 0 376 "float"
V L "p" 0 377 "*int8"
V L "i" 0 378 "sint16"
C L "SegmentDisplay" 0 386 1 "*"
F G "SegmentDisplay" 0 387 "void()"
V L "j" 0 389 "sint8"
V L "data_out" 0 389 "sint8"
V L "data_U2" 0 389 "sint8"
V L "data_U1" 0 389 "sint8"
V L "cnt" 0 390 "sint8"
V L "V_to_Seg" 0 393 "sint16"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
V L "Count_Display" 0 414 "sint16"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 2 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
C L "SegmentDisplay" 0 386 1 "FUNCTION"
F G "StartTimer" 0 532 "void()"
F G "StopTimer" 0 536 "void()"
F G "Read_VDC" 0 541 "void()"
C L "Read_VDC" 0 386 1 "FUNCTION"
C L "Read_VDC" 0 386 1 "FUNCTION"
V L "i" 0 559 "sint8"
C L "Read_VDC" 0 386 1 "FUNCTION"
C L "Read_VDC" 0 582 1 "*"
C L "Read_VDC" 0 582 1 "FUNCTION"
C L "Read_VDC" 0 582 1 "FUNCTION"
C L "Read_VDC" 0 582 1 "FUNCTION"
C L "Read_VDC" 0 582 1 "FUNCTION"
C L "Read_VDC" 0 582 1 "FUNCTION"
F G "buttonRead" 0 697 "void()"
V L "st1" 0 699 "0"
V L "st2" 0 699 "1"
V L "st3" 0 699 "2"
V L "st4" 0 699 "3"
V L "st5" 0 699 "4"
V L "State" 0 700 "int16"
V L "deb" 0 700 "int16" "deb==Debount"
V L "tempValue" 0 701 "sint16"
C L "buttonRead" 0 582 1 "FUNCTION"
C L "buttonRead" 0 582 1 "FUNCTION"
C L "buttonRead" 0 582 1 "FUNCTION"
C L "buttonRead" 0 582 1 "FUNCTION"
F G "adjusttime" 0 862 "void(int8 v0id)"
V L "v0id" 0 862 "int8"
F G "TIMER3_isr" 0 869 "void()" "1ms interrupt"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
F G "TIMER2_isr" 0 960 "void()" "5ms interrupt"
F G "MAIN" 0 985 "void()"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
V L "i" 0 1015 "sint8"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
V L "Count_Healty" 0 1063 "int16"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 582 1 "FUNCTION"
C L "MAIN" 0 1092 1 "*"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "bit_first" 2 0
F B "bit_last" 1 2
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_memory" 1 0
F B "write_program_memory" 3 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "set_pullup" 1 2
F B "setup_wdt" 1 0
F B "restart_cause" 0 1
F B "restart_wdt" 0 0
F B "setup_oscillator" 1 3
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer1" 1 2
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer2" 1 2
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer3" 1 2
F B "get_timer3" 0 0
F B "set_timer3" 1 0
F B "get_timer23" 0 0
F B "set_timer23" 1 0
F B "setup_timer4" 1 2
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_timer5" 1 2
F B "get_timer5" 0 0
F B "set_timer5" 1 0
F B "get_timer45" 0 0
F B "set_timer45" 1 0
F B "setup_capture" 2 0
F B "get_capture" 1 2
F B "setup_compare" 2 0
F B "set_compare_time" 2 3
F B "set_pwm_duty" 2 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "setup_spi3" 1 0
F B "spi_read3" 0 1
F B "spi_write3" 1 0
F B "spi_data_is_in3" 0 0
F B "setup_crc" F B "crc_init" 0 1
F B "crc_calc8" 2 3
F B "crc_calc" 2 3
F B "setup_pmp" 2 0
F B "setup_psp" 2 0
F B "pmp_address" 1 0
F B "pmp_read" 0 0
F B "pmp_write" 1 0
F B "psp_read" 0 1
F B "psp_write" 0 1
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "pmp_output_full" 0 0
F B "pmp_input_full" 0 0
F B "pmp_overflow" 0 0
F B "setup_rtc" 2 0
F B "setup_rtc_alarm" 3 0
F B "rtc_read" 1 0
F B "rtc_write" 1 0
F B "rtc_alarm_read" 1 0
F B "rtc_alarm_write" 1 0
F B "setup_motor_pwm" 2 5
F B "set_motor_unit" 5 0
F B "set_motor_pwm_duty" 3 0
F B "set_motor_pwm_event" 2 0
F B "get_motor_pwm_count" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
